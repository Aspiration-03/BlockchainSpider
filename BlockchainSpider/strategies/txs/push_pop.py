from typing import Any, Dict, Tuple


class PushPopModel:
    def __init__(self, source, **kwargs):
        self.source = source

    def push(self, node, edges: list, **kwargs):
        """
        push a node with related edges
        :param node: the pushed node
        :param edges: the edges related to the pushed node
        :param kwargs: the pushing context keyword arguments, generated by the pop operation
        :return:
        """
        raise NotImplementedError()

    def pop(self) -> Tuple[Any, Dict]:
        """
        pop a node for the next step
        :return:
        """
        raise NotImplementedError()

    def get_context_snapshot(self) -> Dict:
        """
        Get a snapshot dict for the strategy params
        :return:
        """
        raise NotImplementedError()

    def get_node_rank(self) -> Dict:
        """
        Get a node rank dict for the strategy
        :return:
        """
        raise NotImplementedError()
