# Labels Spider

## Etherscan labels Cloud Spider
Launch the following command in the console to crawl the labels from etherscan labels cloud. 
Before doing this, please make sure you have installed `chromedriver`.
```shell
scrapy crawl labels.etherscan -a out=./labels_etherscan -a labels=phish,exchange
```
the argument for Etherscan labels Cloud Spider including:

- **out**: the output labels filename.
- **labels**(optional): the specified label name which supports fuzzy matching, if not set, defaults to crawl all labels.

## CryptoScamDB Labels Spider
Launch the following command in the console to crawl the labels from CryptoScamDB.
```shell
scrapy crawl labels.cryptoscamdb -a out=./labels_cryptoscamdb
```
the argument for CryptoScamDB Labels Spider including:

- **out**: the output labels filename.

## OFAC Labels Spider
Launch the following command in the console to crawl the labels from OFAC.
```shell
scrapy crawl labels.ofac -a out=./labels_ofac
```
the argument for OFAC Labels Spider including:

- **out**: the output labels filename.

## Contract Labels Spiders
Launch the following command in the console to crawl the labels of contracts at Ethereum-like blockchain,
including

- `ETH`: please use `labels.contract.eth`
- `BSC`: please use `labels.contract.bsc`
- `polygon`: please use `labels.contract.polygon`
- `heco`: please use `labels.contract.heco`

The following example shows how to start a contract labels spider at Ethereum:
```shell
scrapy crawl labels.contract.eth -a out=./labels_contract_eth  
```

The principle of this spider is to scan the transactions for creating contracts in the block,
so we provide some arguments to control the numbers of block for scanning.
In addition, if you only want to know the labels of some contract addresses,
you can also use them as input without scanning the blocks, just like:
```
0xb6d11c0bd7df8a3728ca972ebd9136ac6b0d92c0
0xb621bc2c30dc420995cdca93985b0fbedfa905a0
0x344cb09ce4919d803536bcd49184880c2a822080
```

The arguments for Contract Labels Spiders including:
- **out**: the output labels filename.
- **start_blk**: the scanning start block.
- **end_blk**: the scanning end block.
- **file**: the contract address filename.